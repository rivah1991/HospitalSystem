import { Component, Inject, OnInit } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { MatDialogModule } from '@angular/material/dialog';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { FormsModule } from '@angular/forms';
import { MatCardModule } from '@angular/material/card';
import { MatListModule } from '@angular/material/list';
import { MatSelectModule } from '@angular/material/select';
import { AuthService } from '../../shared/services/auth.service';
import { UserService } from '../../shared/services/user.service';

@Component({
  selector: 'app-profile-modal',
  standalone: true,
  imports: [
    MatDialogModule, MatSelectModule,
    MatFormFieldModule,
    MatInputModule,
    MatButtonModule,
    MatIconModule,
    FormsModule,  
    MatCardModule,
    MatListModule
  ],
  templateUrl: './profil-modal.component.html',
  styleUrls: ['./profil.component.css']
})
export class ProfileModalComponent implements OnInit {
  profilePic: string = '/assets/profil.jpg';  
  currentUser: any;
  email: string = ''; 
  specialty: string = '';
  qualification: string = '';
  experience: string = '';
  licenseNumber: string = '';
  emergencyContact: string = '';

  specialties: string[] = ['Cardiology', 'Neurology', 'Pediatrics', 'Orthopedics'];
  qualifications: string[] = ['MD', 'PhD', 'Nurse', 'Specialist'];

  constructor(
    public dialogRef: MatDialogRef<ProfileModalComponent>,
    @Inject(MAT_DIALOG_DATA) public data: any,
    private authService: AuthService,
    private userService: UserService
  ) {}

  ngOnInit(): void {
    this.authService.getCurrentUser().subscribe({
      next: (data) => {
        this.currentUser = data; 
        this.profilePic = this.currentUser?.profileImage || this.profilePic;
        this.specialty = this.currentUser?.specialty || '';
        this.qualification = this.currentUser?.qualification || '';
        this.experience = this.currentUser?.experience || '';
        this.licenseNumber = this.currentUser?.licenseNumber || '';
        this.emergencyContact = this.currentUser?.emergencyContact || '';
      },
      error: (error) => {
        console.error('Error fetching user data', error);
      }
    });
  }

  // Méthode pour changer l'image de profil
  changeProfilePic(event: any): void {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = () => {
        this.profilePic = reader.result as string;
      };
      reader.readAsDataURL(file);
    }
  }

  // Méthode pour fermer le modal
  close(): void {
    this.dialogRef.close();
  }

  // Méthode de mise à jour du profil
  updateProfile(): void {
    const updatedUser = {
      UserId: this.currentUser?.id,  // Assurez-vous de transmettre l'ID utilisateur
      profileImageUrl: this.profilePic,
      specialty: this.specialty,
      qualification: this.qualification,
      experience: this.experience,
      licenseNumber: this.licenseNumber,
      emergencyContact: this.emergencyContact,
    };

    this.userService.updateProfile(updatedUser).subscribe({
      next: (response) => {
        console.log('Profil mis à jour avec succès');
        this.dialogRef.close();
      },
      error: (error) => {
        console.error('Erreur lors de la mise à jour du profil', error);
      }
    });
  }
}
